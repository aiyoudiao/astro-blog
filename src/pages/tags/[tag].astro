---
export async function getStaticPaths() {
  const allPosts = Object.values(
    import.meta.glob("../posts/*.md", { eager: true })
  );

  const uniqueTags = [
    ...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });

  //   return [
  //     { params: { tag: "astro" }, props: {posts: allPosts}},
  //     { params: { tag: "successes" }, props: {posts: allPosts}},
  //     { params: { tag: "community" }, props: {posts: allPosts}},
  //     { params: { tag: "blogging" }, props: {posts: allPosts}},
  //     { params: { tag: "setbacks" }, props: {posts: allPosts}},
  //     { params: { tag: "learning in public" }, props: {posts: allPosts}},
  //   ];
}

const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter((post: any) => post.frontmatter.tags?.includes(tag));
---

<meta charset="utf-8" />
<p>包含「{tag}」标签的文章</p>
<ul>
  {
    // filteredPosts.map((post: any) => (
    //   <li>
    //     <a href={post.url}>{post.frontmatter.title}</a>
    //   </li>
    // ))
    posts.map((post: any) => (
      <li>
        <a href={post.url}>{post.frontmatter.title}</a>
      </li>
    ))
  }
</ul>
